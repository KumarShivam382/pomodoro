// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String        @id @default(uuid())
  username          String        
  email             String        @unique
  password          String
  createdAt         DateTime      @default(now())
  
  // one-to-many 
  pomodoroSessions  PomodoroSession[]
  
  // One-to-one 
  settings          UserSettings? 
}

model PomodoroSession {
  id                String        @id @default(uuid())
  startTime         DateTime
  endTime           DateTime?
  
  //  many-to-one 
  user              User          @relation(fields: [userId], references: [id])
  userId            String
  
  //  many-to-many 
  tasks             Task[]        @relation("TasksInSession")
}

model Task {
  id                String        @id @default(uuid())
  title             String
  completed         Boolean       @default(false)
  createdAt         DateTime      @default(now())
  
  // many-to-one 
  pomodoroSession   PomodoroSession? @relation("TasksInSession", fields: [pomodoroSessionId], references: [id])
  pomodoroSessionId String
}

model UserSettings {
  id                String        @id @default(uuid())
  user             User          @relation(fields: [userId], references: [id])
  userId           String           @unique 
  
  workDuration     Int           @default(25)
  breakDuration    Int           @default(5)   
  createdAt        DateTime      @default(now())
  
}

